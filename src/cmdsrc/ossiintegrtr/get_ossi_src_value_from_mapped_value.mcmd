<command>
<name>get ossi src value from mapped value</name>
<description>Get mapped value from here to receipient</description>
<type>Local Syntax</type>

<argument name="sys_id" required="yes" datatype="string">System for which we need to do the conversion</argument>
<argument name="value" required="yes" datatype="string">Current value</argument>
<argument name="map_type" required="yes" datatype="string">Which Map to use</argument>
<argument name="fetch_col" required="no" datatype="string"></argument>
<argument name="fld_pos" required="no" datatype="string"></argument>
<argument name="wh_id" required="no" datatype="string"></argument>

<local-syntax>
<![CDATA[
/*
 * Change Log
 * Initial Check In
 * Kent.Zhao - 10731
 */
 
publish data 
  where sys_id = @sys_id 
/* This is a SQLServer issue.  If we do not do this then nvl later on with upper is not able to evaluate to ---- */

    and value = nvl(@value, '') 
    and map_type = @map_type 
    and fetch_col = nvl(@fetch_col, 'polval') 
    and fld_pos = @fld_pos 
    and wh_id = nvl(nvl(@wh_id,@whse_id), '----') 
|
publish data 
  where polcod = ossi__get_polcod_by_sys_id(@sys_id) 
|
publish data 
  where uc_cache_name = 'get_ossi_src_from_mapped_value_' || @sys_id || '_' || @wh_id || '_' || @map_type || '_' || @value 
|
{
  get ossi data from cache catch (-1403,510) 
  |
  if (@? = 0)
  {
    [[
      String separator = '____';

      str = uc_cache_value;

      String[] split_a = str.split ( separator );
      polval = split_a [0];
      rtstr2 = split_a [1];

      [polval:polval,rtstr2:rtstr2]
      ]]
  }
  else 
  {
    [select polval polval, 
            rtstr2 rtstr2 
       from (select y.* 
               from (select 1 ord, 
                            polval, 
                            rtstr2 
                       from poldat_view pv 
                      where polcod = @polcod 
                        and polvar = @map_type 
                        and nvl(upper(@value), '----') like rtstr1 
                        and rtstr1 != '%' 
/* This is to match in the second part of union for default */

                        and nvl(rtnum2,1) = 1 
/* Enabled row for external system to this system */

                        and wh_id = @wh_id 
                      union all 
                     select 2 ord, 
                            polval, 
                            rtstr2 
                       from poldat_view pv 
                      where polcod = @polcod 
                        and polvar = @map_type 
                        and rtstr1 = '%' 
                        and nvl(rtnum2,1) = 1 
/* Enabled row for external system to this system */

                        and wh_id = @wh_id 
                    ) y 
                      where rownum < 999999 
                      order by 1 
                    ) x 
              where rownum < 2 
    ] catch (-1403,510) 
    |
    if (@? != 0)
    set return status 
          where status = ossi__e ('eUSR_SRC_VALUE_NOT_FOUND_FOR_MAPPED_VALUE') 
            and dst_value = @value 
            and map_type = @map_type 
            and fetch_col = @fetch_col 
            and fld_pos = @fld_pos 
    |
    /* The last XYZ is just to keep split above happy */
    save ossi data to cache 
          where uc_cache_value = @polval || '____' || @rtstr2 || '____XYZ' 
    |
    publish data 
          where polval = @polval 
            and rtstr2 = @rtstr2 
  }
  |
  if (@polval is null)
  set return status 
        where status = ossi__e ('eUSR_SRC_VALUE_NOT_FOUND_FOR_MAPPED_VALUE') 
          and dst_value = @value 
          and map_type = @map_type 
          and fetch_col = @fetch_col 
          and fld_pos = @fld_pos else 
  {
    /* If the mapped value was ----, it implies a null */
    if (@polval = '----')
    publish data 
          where polval = '' 
    /* If the mapped value was % this implies that it is really the original value */
    else if (@polval = '%')
    publish data 
          where polval = upper(@value) 
    |
    publish data 
          where ret = decode (upper(@fetch_col), 'POLVAL', @polval, 'POLVAL2',@polval, @rtstr2) 
    |
    if (@fld_pos > 0)
    publish data 
          where ret = ossi__get_fld_from_list (@ret, @fld_pos, '\|') else publish data 
          where ret = @ret 
  }
  |
  /* Disabled this functaionality - since we dont need it avoid SQL */
  if (1=0)
  {
    [select min(rtstr1) post_cmd 
       from poldat_view pv 
      where polcod = @polcod 
        and polvar = @map_type 
        and polval = '_POSTPROC_' 
        and nvl(upper(rtstr2), 'POLVAL') = upper(@fetch_col) 
        and nvl(rtnum1,1) = 1 
/* post processing enabled */

        and wh_id = @wh_id 
    ] 
    |
    if (@post_cmd is not null)
    {
      execute server command 
            where cmd = "publish data 
            where ret = " || @post_cmd || "('" || @ret || "')" 
    }
  }
  else publish data 
        where ret = @ret 
}

]]>
</local-syntax>
<documentation>

<remarks>
This command may be used to get mapped value from here to receipient.
</remarks>

<retcol name="sys_grp_id" type="String"></retcol>

<exception value="eOK">Normal successful completion</exception>

</documentation>
</command>