<command>
<name>list ossi auto wave rules ready for processing</name>
<description>This command will list the auto wave rules that we should process</description>
 
<argument name="wh_id" required="yes" datatype="string"></argument>
<argument name="uc_auto_wave_rule_id" required="yes" datatype="string">Optionally pass in usr_auto_wave_rule_hdr.uc_auto_wave_rule_id</argument>
<argument name="uc_auto_wave_rule_id_list" required="yes" datatype="string">Optionally pass in list of usr_auto_wave_rule_hdr.uc_auto_wave_rule_id</argument>
<argument name="uc_ossi_job_id" required="yes" datatype="string"></argument>




<type>Local Syntax</type>
<local-syntax>
<![CDATA[

if ( @uc_auto_wave_rule_id is null ) hide stack variable where name = 'uc_auto_wave_rule_id'
|
if ( @uc_auto_wave_rule_id_list is not null )
    publish data
    where uc_rule_id_filter = "uc_auto_wave_rule_id in (" || ossi__get_sql_in_from_string ( @uc_auto_wave_rule_id_list ) || ")"
else
    publish data
    where uc_rule_id_filter = "1=1"
|
{
    [
    select *
    from usr_auto_wave_rule_hdr
    where 1=1
    and wh_id = @wh_id
    and @uc_rule_id_filter:raw
    and @+uc_auto_wave_rule_id
    and @+ena_flg
    order by wh_id, uc_auto_wave_rule_id
    ]
    catch (-1403,510)
    |
    if ( @? = 0 )
    {
        publish data
        where uc_pk_data = 'UC_W_' || @wh_id || '_' || @uc_auto_wave_rule_id
        |
        publish data
        where uc_my_module_id = 'DO-' || @uc_pk_data
        |
        publish data
            where wh_id = @wh_id
            and uc_auto_wave_rule_id = @uc_auto_wave_rule_id
            and uc_pk_data = @uc_pk_data
            and uc_my_module_id = @uc_my_module_id
			and ena_flg = @ena_flg
			and filter_id = @filter_id
			and ins_dt = @ins_dt
			and ins_user_id = @ins_user_id
			and last_upd_dt = @last_upd_dt
			and last_upd_user_id = @last_upd_user_id
			and uc_auto_alloc_flg = @uc_auto_alloc_flg
			and uc_auto_pckrel_flg = @uc_auto_pckrel_flg
			and uc_auto_wave_rule_descr = @uc_auto_wave_rule_descr
			and uc_auto_wave_rule_id = @uc_auto_wave_rule_id
			and uc_batcod_prefix = @uc_batcod_prefix
			and uc_can_rpl_flg = @uc_can_rpl_flg
			and uc_chg_pckts_p_flg = @uc_chg_pckts_p_flg
			and uc_sch_active_dom_list = @uc_sch_active_dom_list
			and uc_sch_active_dow_list = @uc_sch_active_dow_list
			and uc_sch_active_tim_end = @uc_sch_active_tim_end
			and uc_sch_active_tim_start = @uc_sch_active_tim_start
			and uc_sch_inactive_dom_list = @uc_sch_inactive_dom_list
			and uc_sch_inactive_tim_end = @uc_sch_inactive_tim_end
			and uc_sch_inactive_tim_start = @uc_sch_inactive_tim_start
			and uc_sch_interval = @uc_sch_interval
			and uc_sch_tim_local_flg = @uc_sch_tim_local_flg
			and wh_id = @wh_id 
    }
}
   
]]>
</local-syntax>

<documentation>
<remarks>
<![CDATA[
<p>
This will list all the auto wave rules
</p>
]]>
</remarks>

<retrows>n</retrows>

<retcol name="wh_id" type="COMTYP_CHAR"></retcol>
<retcol name="uc_auto_wave_rule_id" type="COMTYP_CHAR"></retcol>
<retcol name="uc_pk_data" type="COMTYP_CHAR">As needed by the asyc API.  We will push UC_W_wh_rule</retcol>
<retcol name="uc_my_module_id" type="COMTYP_CHAR">This is how the module will be listed</retcol>


<example>
<![CDATA[
<p>
</p>
]]>

</example>

<exception value="eOK">The command completed successfully.</exception>


<seealso cref="process usr auto wave rules"></seealso>

</documentation>


</command>