<command>
<name>upload ossi one document to store</name>
<description>Upload one document to the document store</description>

<argument name="uc_doc_upload_q_id" required="yes" datatype="string">wh</argument>
<argument name="comflg" required="yes" datatype="string">commit</argument>


<argument name="uc_keep_processed_records" required="yes" datatype="integer">1 or 0.  if 1 we keep processed records for success.  0 means we delete them.  1 is default</argument>


<argument name="uc_ossi_job_seq" required="yes" datatype="string"></argument>
<argument name="uc_ossi_module_seq" required="yes" datatype="string"></argument>
<argument name="uc_ossi_who" required="yes" datatype="string"></argument>

<argument name="uc_doc_store_prefix" required="no" datatype="string">prefix for the uploaded documents</argument>
<argument name="uc_doc_store_upload_temp_folder" required="no" datatype="string">Create fiels temporarily here</argument>

<argument name="uc_az_blob_container" required="no" datatype="string">name of the comtainer.  if not specified use @@UC_DOC_Q_UPLOAD_CONTAINER</argument>
<argument name="uc_az_blob_account" required="no" datatype="string">name of the account.  if not specified use @@UC_DOC_Q_UPLOAD_ACCOUNT</argument>
<argument name="uc_az_blob_sas_token" required="no" datatype="string">value of the SAS token.  if not specified use @@UC_DOC_Q_UPLOAD_SAS_TOKEN</argument>
<argument name="uc_az_pgm" required="no" datatype="string">program to use.  if not specified use env var UC_AZ_PGM.  if that is not set default to az</argument>

<argument name="uc_max_attempts" datatype="integer">If the upload has failed this many times, change the code from U to E</argument>

<type>Local Syntax</type>
<local-syntax>
<![CDATA[


publish data
where my_savepoint = 'SP_' || @uc_doc_upload_q_id
and uc_doc_prefix = nvl(nvl(@uc_doc_prefix, @@UC_DOC_Q_UPLOAD_PREFIX), @@MOCA_ENVNAME)
and uc_doc_tmp_path = nvl(@uc_doc_tmp_path, @@LESDIR || '/temp' )
|
{
    set savepoint where i_savepoint = @my_savepoint
    ;
    publish data
    where uc_ossi_action_seq = ossi__register_action ( @uc_ossi_job_seq, @uc_ossi_module_seq, 'UPLOAD-FULL', 
                                                       @uc_doc_upload_q_id,
                                                       @uc_ossi_who )
    |
    {
        [select uc_upload_attempts
           from usr_ossi_doc_upload_q
          where uc_doc_upload_q_id = @uc_doc_upload_q_id
        ]
        |
        upload ossi document to store
        where uc_doc_store_prefix = @uc_doc_store_prefix 
        and uc_doc_store_upload_temp_folder = @uc_doc_store_upload_temp_folder
        catch(@?)
        |
        publish data
        where uc_upload_stat = @?
        and uc_upload_stat_msg = @!
        |
        {
            if ( @uc_upload_stat = 0 )
                publish data
                where uc_upload_stat_cd = 'D'
            else
            {
                if ( @comflg = 0 )
                    rollback to savepoint
                    where i_savepoint = @my_savepoint
                ;
                /* If this failed but @uc_upload_attempts + 1 is less than @uc_max_attempts, keep the status as U */
                if ( @uc_max_attempts is not null and int(@uc_upload_attempts + 1) < int(@uc_max_attempts) )
                {
                    publish data
                    where uc_upload_stat_cd = 'U'
                }
                else
                {
                    publish data
                    where uc_upload_stat_cd = 'E'
                }
            }
            |
            {
                if ( @uc_keep_processed_records = 0 and @uc_upload_stat_cd = 'D' )
                {
                    [
                    delete from usr_ossi_doc_upload_q
                    where uc_doc_upload_q_id = @uc_doc_upload_q_id
                    ]
                    catch (-1403,510)
                }
                else
                {
                    [
                    update usr_ossi_doc_upload_q
                    set uc_upload_stat_cd = @uc_upload_stat_cd,
                        uc_upload_dt = decode ( @uc_upload_stat_cd, 'D', sysdate, null ),
                        uc_upload_attempts = @uc_upload_attempts + 1
                    where uc_doc_upload_q_id = @uc_doc_upload_q_id
                    ]
                    catch (-1403,510)
                }
                ;
                if ( @comflg = 1 )
                    commit
                ;
                complete ossi job log
                ;
                publish data
                where uc_doc_upload_q_id = @uc_doc_upload_q_id
                and uc_upload_stat = @uc_upload_stat
                and uc_upload_stat_msg = @uc_upload_stat_msg
                and my_savepoint = @my_savepoint
                and uc_upload_stat_cd = @uc_upload_stat_cd
                and uc_full_file_path = @uc_full_file_path
                and uc_upload_id = @uc_upload_id
                and uc_upload_metadata = @uc_upload_metadata
                and uc_doc_q_upload_etag = @uc_doc_q_upload_etag
                and uc_ossi_job_seq = @uc_ossi_job_seq
                and uc_ossi_module_seq = @uc_ossi_module_seq
                and uc_ossi_action_seq = @uc_ossi_action_seq
            }
        }
    }
}


]]>
</local-syntax>
<documentation>

<retrows>1</retrows>

<retcol name="uc_doc_upload_q_id" type="COMTYP_CHAR">The key value</retcol>
<retcol name="uc_upload_stat_cd" type="COMTYP_CHAR">The status we are updating the record to.  E means error D means done</retcol>

<retcol name="uc_upload_stat" type="COMTYP_CHAR">Status of upload</retcol>
<retcol name="uc_upload_stat_msg" type="COMTYP_CHAR">Message of uploiad</retcol>

<retcol name="my_savepoint" type="COMTYP_CHAR">Savepoint id</retcol>


<retcol name="uc_full_file_path" type="COMTYP_CHAR">Full path to temp file.  it is removed for sucessful or failed case</retcol>
<retcol name="uc_upload_id" type="COMTYP_CHAR">Identifier for this on doc store</retcol>
<retcol name="uc_doc_q_upload_etag" type="COMTYP_CHAR">This is the etag for the document returned.  Must be not null to imply success</retcol>
<retcol name="uc_upload_metadata" type="COMTYP_RES">metadata resultset</retcol>

<retcol name="uc_ossi_job_seq" type="COMTYP_CHAR"></retcol>
<retcol name="uc_ossi_module_seq" type="COMTYP_CHAR"></retcol>
<retcol name="uc_ossi_action_seq" type="COMTYP_CHAR"></retcol>



<remarks>
<![CDATA[

This command will be called during upload process to upload the data to the document store

]]>
</remarks>
<seealso cref="process ossi document upload queue"></seealso>
<seealso cref="upload ossi document to store"></seealso>


</documentation>
</command>
