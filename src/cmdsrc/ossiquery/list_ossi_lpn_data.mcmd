<command>
<name>list ossi lpn data</name>
<description>
This is called by various labels to get the data at the load level
</description> 
<type>Local Syntax</type>

<argument name="wh_id" default-value="" required="No" datatype="string"></argument>
<argument name="lodnum" default-value="" required="No" datatype="string">Also respect lpn stack variable</argument>
<argument name="locale_id" default-value="" required="No" datatype="string"></argument>
<argument name="uc_get_add_data_rule_grp_id" default-value="" required="No" datatype="string">A rule group to add additoional columns. e.g. OUTPUT-SET-LABEL-INVLOD</argument>


<local-syntax>
<![CDATA[

publish data
where wh_id = nvl(@wh_id, @@WH_ID)
and lodnum = nvl(@lodnum, @lpn)
and locale_id = nvl(nvl(@locale_id, @@LOCALE_ID), 'US_ENGLISH')
and uc_get_add_data_rule_grp_id = nvl(@uc_get_add_data_rule_grp_id, 'OUTPUT-SET-LABEL-INVLOD')
|
{
    if (@lodnum is null) hide stack variable where name = 'lodnum'
    |
    {
        publish data
        where lbl_mixed_part = ossi__mls_text('lbl_mixed_part', 'Mixed Parts', @locale_id)
        and   lbl_mixed_cli  = ossi__mls_text('lbl_mixed_cli',  'Mixed Clients', @locale_id)
        and   lbl_mixed_fifo = ossi__mls_text('lbl_mixed_fifo', 'Mixed FIFO', @locale_id)
        and   lbl_mixed_lot  = ossi__mls_text('lbl_mixed_lot',  'Mixed Lots', @locale_id)
        and   lbl_mixed_rev  = ossi__mls_text('lbl_mixed_rev',  'Mixed Revs', @locale_id)
        |
        execute ossi les_cmd
        where les_cmd_id = 'uc_query_list_ossi_lpn_data_base'
        and uc_les_cmd_inline = 1
        and exec_uc_les_cmd_cust_lvl = null
        and uc_inhibit_return_extra_columns = 1
        catch (-1403,510)
    }
    >> res
    |
    {
        publish ossi fields from rules engine
        where uc_rule_grp_id = @uc_get_add_data_rule_grp_id
        and uc_table_name = 'INVLOD'
        and uc_set_default_mode = 'LBL'
        and uc_ignore_field_errors = 1
        and uc_publish_error_fields_with_error_info = 1
        catch (@?) /* catching errors here because users could have typed something incorrectly - this is user controlled.  IN that case nulls will be shpwn */
    }
    >> res1
    |
    combine ossi columns from multiple results
    where uc_cmb_res1 = @res
    and uc_cmb_res2 = @res1
}
    
]]>
</local-syntax>

<documentation>
<remarks>
This component is used to print labels that are at the load level.
</remarks>

<retrows>1</retrows>

<retcol name="prtnum" type="string"></retcol>
<retcol name="prt_client_id" type="string"></retcol>
<retcol name="dsp_prtnum" type="string"></retcol> 
<retcol name="untqty" type="string"></retcol>
<retcol name="wh_id" type="string"></retcol>
<retcol name="fifdte" type="string"></retcol>
<retcol name="lotnum" type="string"></retcol>
<retcol name="orgcod" type="string"></retcol>
<retcol name="revlvl" type="string"></retcol>
<retcol name="prt_desc" type="string"></retcol>
<retcol name="nxtloc" type="string"></retcol>
<retcol name="stoloc" type="string"></retcol>
<retcol name="lodnum" type="string"></retcol>
<retcol name="invsts" type="string"></retcol>
<retcol name="voc_chkdgt" type="string"></retcol>


<retcol name="flex output" type="string">Based on rule passed in, e.g. OUTPUT-SET-LABEL-INV-CONTAINER.  We will show additional columns.  This is when uc_get_add_data_rule_grp_id is passed in with the rule id </retcol>


<exception value="eOK">Normal successful completion</exception>

<seealso cref="publish ossi fields from rules engine"></seealso>

</documentation>


</command>


