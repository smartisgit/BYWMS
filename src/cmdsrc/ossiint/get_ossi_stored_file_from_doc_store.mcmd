<command>
<name>get ossi stored file from doc store</name>
<description>Find the document that is stored for context values in the table usr_ossi_doc_store</description>

<argument name="uc_doc_filter_wh_id" required="yes" datatype="string"></argument>
<argument name="uc_doc_filter_uc_doc_id" required="yes" datatype="string"></argument>
<argument name="uc_doc_filter_typ_cd" required="yes" datatype="string"></argument>
<argument name="uc_doc_filter_subtyp_cd" required="yes" datatype="string"></argument>
<argument name="uc_doc_filter_ordnum" required="yes" datatype="string"></argument>
<argument name="uc_doc_filter_ship_id" required="yes" datatype="string"></argument>
<argument name="uc_doc_filter_schbat" required="yes" datatype="string"></argument>
<argument name="uc_doc_filter_invnum" required="yes" datatype="string"></argument>
<argument name="uc_doc_filter_cponum" required="yes" datatype="string"></argument>
<argument name="uc_doc_filter_trknum" required="yes" datatype="string"></argument>

<argument name="uc_max_rows" required="yes" datatype="string">If not passed then 1</argument>
<argument name="uc_target_folder" required="yes" datatype="string">Place file here.  If not passed in $LESDIR/reports</argument>
<argument name="uc_target_filnam" required="yes" datatype="string">Put as this file.  If not passed in next number from rptnum</argument>

<argument name="uc_write_output_file" required="yes" datatype="string">If 1 then we write it to OS</argument>

<type>Local Syntax</type>
<local-syntax>
<![CDATA[

if ( @uc_doc_filter_uc_doc_id is null ) hide stack variable where name = 'uc_doc_filter_uc_doc_id'
|
if ( @uc_doc_filter_wh_id is null ) hide stack variable where name = 'uc_doc_filter_wh_id'
|
if ( @uc_doc_filter_typ_cd is null ) hide stack variable where name = 'uc_doc_filter_typ_cd'
|
if ( @uc_doc_filter_subtyp_cd is null ) hide stack variable where name = 'uc_doc_filter_subtyp_cd'
|
if ( @uc_doc_filter_ordnum is null ) hide stack variable where name = 'uc_doc_filter_ordnum'
|
if ( @uc_doc_filter_ship_id is null ) hide stack variable where name = 'uc_doc_filter_ship_id'
|
if ( @uc_doc_filter_schbat is null ) hide stack variable where name = 'uc_doc_filter_schbat'
|
if ( @uc_doc_filter_invnum is null ) hide stack variable where name = 'uc_doc_filter_invnum'
|
if ( @uc_doc_filter_cponum is null ) hide stack variable where name = 'uc_doc_filter_cponum'
|
if ( @uc_doc_filter_trknum is null ) hide stack variable where name = 'uc_doc_filter_trknum'
|
publish data
where uc_max_rows = nvl(@uc_max_rows, 1 )
and uc_target_folder = nvl(@uc_target_folder, @@LESDIR || '/reports' )
and uc_write_output_file = nvl(@uc_write_output_file, 1 )
|
{
    [
    select x.*
    from 
    (
        select uc_doc_id,
               uc_filesize,
               uc_file_full_path,
               uc_doc_typ_cd,
               uc_doc_subtyp_cd,
               wh_id,
               ordnum,
               ship_id,
               schbat,
               cponum,
               invnum,
               trknum
        from usr_ossi_doc_store
        where 1=1
        and @+uc_doc_id^uc_doc_filter_uc_doc_id
        and @+wh_id^uc_doc_filter_wh_id
        and @+uc_doc_typ_cd^uc_doc_filter_typ_cd
        and @+uc_doc_subtyp_cd^uc_doc_filter_subtyp_cd
        and @+ordnum^uc_doc_filter_ordnum
        and @+ship_id^uc_doc_filter_ship_id
        and @+schbat^uc_doc_filter_schbat
        and @+invnum^uc_doc_filter_invnum
        and @+cponum^uc_doc_filter_cponum
        and @+trknum^uc_doc_filter_trknum
        and rownum < 999999
        order by 1 desc
    ) x
    where rownum <= @uc_max_rows
    ]
    catch (-1403,510)
    |
    if ( @? = 0 )
    {
        sl_split filename 
        where full_file_name = @uc_file_full_path
        |
        [
        select uc_contents_base64
        from usr_ossi_doc_store
        where uc_doc_id = @uc_doc_id
        ]
        |
        decode from base64
        where str = @uc_contents_base64
        |
        {
            if ( @uc_target_filnam is null and @uc_write_output_file = 1 )
                publish data
                where uc_target_filnam = ossi__next_number ( 'rptnum' ) || '.' || @s_ext
            |
            {
                if ( @uc_write_output_file = 1 )
                    write output file
                    where filnam = @uc_target_filnam
                    and path = @uc_target_folder
                    and mode = 'w'
                    and data_bin = @base64_decoded
                    and data = null
                else
                    publish data
                    where page_data = @base64_decoded
                |
                publish data
                where uc_doc_id = @uc_doc_id    
                and uc_doc_typ_cd = @uc_doc_typ_cd            
                and uc_doc_subtyp_cd = @uc_doc_subtyp_cd
                and uc_filesize = @uc_filesize
                and uc_file_full_path = @uc_file_full_path
                and uc_written_filnam = @filnam
                and uc_write_output_file = @uc_write_output_file
                and page_data = @page_data
                and wh_id = @wh_id
                and ordnum = @ordnum
                and ship_id = @ship_id
                and trknum = @trknum
                and invnum = @invnum
                and schbat = @schbat
                and cponum = @cponum
            }
        }
    }
}
   
]]>
</local-syntax>

<documentation>
<remarks>
<![CDATA[
<p>
This command will fetch the document, decode it from base64 and write the file to OS.  Typical use case will be to then print it
</p>
]]>
</remarks>

<retrows>n - based on each rule that is defined</retrows>

<retcol name="uc_doc_id" type="COMTYP_CHAR"></retcol>
<retcol name="uc_doc_typ_cd" type="COMTYP_CHAR"></retcol>
<retcol name="page_data" type="COMTYP_BINARY">Returned if we dont want to write the file</retcol>
<retcol name="uc_filesize" type="COMTYP_CHAR"></retcol>
<retcol name="uc_file_full_path" type="COMTYP_CHAR"></retcol>
<retcol name="uc_written_filnam" type="COMTYP_CHAR"></retcol>
<retcol name="uc_write_output_file" type="COMTYP_CHAR"></retcol>

<retcol name="wh_id" type="COMTYP_CHAR"></retcol>
<retcol name="ordnum" type="COMTYP_CHAR"></retcol>
<retcol name="cponum" type="COMTYP_CHAR"></retcol>
<retcol name="ship_id" type="COMTYP_CHAR"></retcol>
<retcol name="trknum" type="COMTYP_CHAR"></retcol>
<retcol name="invnum" type="COMTYP_CHAR"></retcol>
<retcol name="schbat" type="COMTYP_CHAR"></retcol>



<example>
</example>

<exception value="eOK">The command completed successfully.</exception>


<seealso cref="load ossi inbound file contents to table"></seealso>
<seealso cref="get ossi stored file from doc store"></seealso>


</documentation>


</command>