<command>
<name>execute ossi report and email</name>
<description>Execute a named report and email its results</description>

<argument name="rpt_id"  datatype="string" />
<argument name="locale_id"  datatype="string" />
<argument name="mail_from"  datatype="string" />
<argument name="send_to"  datatype="string" />
<argument name="msg"  datatype="string" />
<argument name="subject"  datatype="string" />

<argument name="uc_gen_filepath"  datatype="string">if passed in the reprot output is created in this folder.  If not passed in
reoport output is placed in $LESDIR/temp</argument>

<argument name="uc_gen_filename"  datatype="string">if passed in the reprot output is named as this file name.  If not passed 
it is report name followed by a 12 number sequence fro sl_gen_filename_seq sequence</argument>

<argument name="uc_keep_rpt_output"  datatype="integer">If 1 we keep the reprot output.  Otherwise (default) we remove the output</argument>



<argument name="usr_id"  datatype="string" />
<argument name="wh_id"  datatype="string" />
<argument name="devcod"  datatype="string" />

<type>Local Syntax</type>
<local-syntax>
<![CDATA[
/*
 * Change Log
 * Initial Check In
 * Kent.Zhao - 10731
 */
 

publish data
where locale_id = nvl(nvl(@locale_id,@@LOCALE_ID),'US_ENGLISH')
and uc_var_email_from = 'UC_' || ossi__replace(upper(@rpt_id),'-', '_' ) || '_EMAIL_FROM'
and uc_var_email_to   = 'UC_' || ossi__replace(upper(@rpt_id),'-', '_' ) || '_EMAIL_TO'
and uc_gen_filepath   = nvl(@uc_gen_filepath, @@LESDIR || '/temp' )
and usr_id            = nvl(@usr_id, @@USR_ID)
and wh_id             = nvl(@wh_id, @@WH_ID )
and devcod            = nvl(@devcod, @@DEVCOD)
|
publish data
where gen_usr_id      = @usr_id
|
if ( @uc_gen_filename is null )
    publish data
    where uc_gen_filename = upper(@rpt_id) || to_char(nextval('sl_gen_filename_seq'),'099999999999') || '.pdf'
|
publish data
where uc_full_filename = @uc_gen_filepath || '/' || @uc_gen_filename
|
{
    execute server command
    where cmd = "publish data where uc_val = @@" || @uc_var_email_from
    and inline = 1
    catch(@?)
    |
    publish data 
    where mail_from = nvl(@mail_from, @uc_val)
}
|
{
    execute server command
    where cmd = "publish data where uc_val = @@" || @uc_var_email_to
    catch(@?)
    |
    publish data where send_to = nvl(@send_to, @uc_val)
}
|
if ( @send_to is null )
    set return status
    where status = '507'
    and message = 'Both uc_email_from and uc_email_to should be set'
|
{
    remove file 
    where filnam = @uc_full_filename
    catch(@?)
    ;
    list  moca report configurations 
    where rpt_id = @rpt_id
    and locale_id = @locale_id
    catch (-1403,510)
    |
    if ( @? = 0 )
    {
        generate moca report
        where rpt_id = @rpt_id
        and desc = @lngdsc
        and format_typ = 'pdf'
        and dest_typ = 'stream' 
        and gen_usr_id = @gen_usr_id
        catch (-1403,510)
        |
        if ( @? = 0 )
        {
            write output file
            where path = @uc_gen_filepath
            and filnam = @uc_gen_filename
            and mode = 'w'
            and data_bin = @page_data
            ;
            send ossi email
            where attachments = @uc_full_filename || ',' || @uc_gen_filename
            |
            {
                if ( @uc_keep_rpt_output != 1 )
                    remove file
                    where filnam = @uc_full_filename
                    catch(@?)
                ;
                publish data
                where rpt_id = @rpt_id
                and lngdsc = @lngdsc
                and locale_id = @locale_id
                and gen_usr_id = @gen_usr_id
                and uc_gen_filepath = @uc_gen_filepath
                and uc_full_filename = @uc_full_filename
                and uc_keep_rpt_output = @uc_keep_rpt_output
                and send_to = @send_to
                and mail_from = @mail_from
                and subject = @subject
                and msg = @msg
                and uc_full_filename = @uc_full_filename
            }
        } /* generate moca report */
    } /* found report config */
}

]]>
</local-syntax>
<documentation>
<remarks>
<![CDATA[
This command allows for generating a report and then emailing it.

]]>
</remarks>

<retrows>0 or 1 - 1 means report got data and was emailed</retrows>
<retcol name="rpt_id" type="COMTYP_CHAR"></retcol>
<retcol name="lngdsc" type="COMTYP_CHAR"></retcol>
<retcol name="locale_id" type="COMTYP_CHAR"></retcol>
<retcol name="gen_usr_id" type="COMTYP_CHAR"></retcol>
<retcol name="uc_gen_filepath" type="COMTYP_CHAR">Report output is temporarily created here</retcol>
<retcol name="uc_full_filename" type="COMTYP_CHAR">Report output file name</retcol>
<retcol name="uc_keep_rpt_output" type="COMTYP_INT">If 1 output was not removed</retcol>


<retcol name="send_to" type="COMTYP_CHAR"></retcol>
<retcol name="mail_from" type="COMTYP_CHAR"></retcol>
<retcol name="subject" type="COMTYP_CHAR"></retcol>
<retcol name="msg" type="COMTYP_CHAR"></retcol>
<retcol name="uc_full_filename" type="COMTYP_CHAR"></retcol>


<seealso cref="send ossi email"></seealso>
<seealso cref="generate moca report"></seealso>


</documentation>
</command>