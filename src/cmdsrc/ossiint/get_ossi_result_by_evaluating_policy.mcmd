<command>
<name>get ossi result by evaluating policy</name>
<description>For the passed in policy parameters, assume rtstr1 has an expression
keep evaluating that until we get a success.  Return that policy data
</description>
<type>Local Syntax</type>

<argument name="wh_id" required="yes" datatype="string"></argument>
<argument name="polcod" required="yes" datatype="string"></argument>
<argument name="polvar" required="yes" datatype="string"></argument>
<argument name="return_all" required="no" datatype="string">If '1' then return all that satisfy.  Default '0'</argument>
<argument name="uc_validate_flg" required="no" datatype="integer">Return first policy that throws an error</argument>
<argument name="uc_return_failed_rules" required="no" datatype="string">If '1' then we return all rules even failed</argument>

<local-syntax>
<![CDATA[
/*
 * Change Log
 * Initial Check In
 * Kent.Zhao - 10731
 */
 
get ossi rules for policy based rules engine
catch (-1403,510)
>> res
|
if ( @? = 0 )
{
    evaluate ossi rules for policy based rules engine
    where res = @res
}

]]>
</local-syntax>

<documentation>
<remarks>
<![CDATA[
<p>
This command is used to get the results by evaluating rules engine
</p>
]]>
</remarks>

<retrows>1</retrows>

<retcol name="uc_error_code" type="COMTYP_CHAR"></retcol>
<retcol name="uc_error_srtseq" type="COMTYP_CHAR"></retcol>
<retcol name="uc_error_polval" type="COMTYP_CHAR"></retcol>
<retcol name="uc_error_rtstr1" type="COMTYP_CHAR"></retcol>
<retcol name="r_polval_orig" type="COMTYP_CHAR"></retcol>
<retcol name="r_polval" type="COMTYP_CHAR"></retcol>
<retcol name="uc_valid_value_to_use" type="COMTYP_CHAR"></retcol>
<retcol name="uc_value_type_cd" type="COMTYP_CHAR"></retcol>


<example>
</example>

<exception value="eOK">The command completed successfully.</exception>


<seealso cref="get ossi rules for policy based rules engine"></seealso>

</documentation>



</command>