<command>
<name>ossi table_columns_as_list</name>
<description>FUNCTION: Get table column names as a list</description>
<type>Local Syntax</type>

<argument name="moca_farg1" required="yes" datatype="string">Name of the table</argument>
<argument name="moca_farg2" required="yes" datatype="string">1 or 0.  default 0.  Include rowid in select list or not</argument>
<argument name="moca_farg3" required="yes" datatype="string">Alias to use</argument>
<argument name="moca_farg4" required="yes" datatype="string">Prefix for column alias</argument>



<local-syntax>
<![CDATA[
/*
* Change Log
* Initial Check In
* Kent.Zhao - 10731
*/
publish data
where table_name          = @moca_farg1
and   column              = ''
and   include_rowid       = nvl(@moca_farg2, '0')
and   table_alias         = @moca_farg3
and   column_alias_prefix = @moca_farg4
and   max_alias_len       = 30
|
if ( @table_alias is null )
    publish data
    where column_prefix = ''
else
    publish data
    where column_prefix = @table_alias || '.'
|
{
    execute ossi moca and cache
    where uc_cache_key = 'UC_TABLE_COLS_' || @table_name || '_' || @table_alias || '_' || @include_rowid || '_' || @column_alias_prefix
    and uc_cache_grp = 'UC_TABCOLS'
    and uc_inline = 1
    and uc_moca_cmd = "
        list table columns where table_name = @table_name
        |
        if ( @include_rowid = '1' or lower(nvl(@column,@column_name)) != 'rowid' )
        {
            /*
             * The return of above command used to be column and then changed to column_name
             * This is to keep it consistent and backward compatible
             */
            if ( @column_alias_prefix is null )
                publish data
                where column_name = @column_prefix || nvl(@column, @column_name)
            else
                publish data
                where column_name = @column_prefix || nvl(@column, @column_name) || ' ' || substr(@column_alias_prefix || nvl(@column, @column_name),1,@max_alias_len)
        }"
}
>> res
|
convert column results to string
where colnam = 'column_name'
and   separator = ','


]]>
</local-syntax>

<documentation>
<remarks>
<![CDATA[
<p>
A function to get a column name as list
</p>
]]>
</remarks>

<retrows>MOCA Function - So one row is returned</retrows>

<exception value="eOK">The command completed successfully.</exception>
<exception value="510">If variable was not passed and no default was passed.</exception>

<seealso cref="list table columns"></seealso>
</documentation>

</command>