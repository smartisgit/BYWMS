<command>
<name>generate ossi workflow documentation one exit point</name>
<description>Generate documentatkion for all maps
</description>
<type>Local Syntax</type>

<argument name="locale_id" required="yes" datatype="string"></argument>
<argument name="exitpnt_typ" required="yes" datatype="string"></argument>
<argument name="exitpnt" required="yes" datatype="string"></argument>
<argument name="uc_exitpnt_descr" required="yes" datatype="string"></argument>
<argument name="exitpnt_filnam" required="yes" datatype="string"></argument>

<argument name="my_table_html" required="yes" datatype="string"></argument>
<argument name="my_td_style_sub" required="yes" datatype="string"></argument>
<argument name="my_td_style" required="yes" datatype="string"></argument>

<argument name="path" required="yes" datatype="string"></argument>


<local-syntax>
<![CDATA[
/*
 * Change Log
 * Initial Check In
 * 20191003 saad.ahmad - 10330 - Generate docymentaion
 */
publish data
where mode = 'w'
and filnam = @exitpnt_filnam
|
get ossi head for integration documentation
where doc_title = 'Exit Point: ' || @uc_exitpnt_descr
and ref_main_index = "index.html"
|
try
{
    write output file
    where mode = 'w'
    and data = @uc_typical_file_header
            ||      @my_table_html
            ||          @uc_typical_tr_data
            ||              '<th width = "20%">Workflow Id</th>'
            ||              '<th width = "50%">Description</th>'
            ||              '<th width = "30">Warehose List </th>'
            ||          '</tr>'
    ;
    [
    select distinct
           serv_mst.serv_id,
           nvl(dscmst.lngdsc, serv_mst.serv_id) uc_serv_id_descr
    from wh_serv_exitpnt
         join wh_serv
             on wh_serv.wh_id = wh_serv_exitpnt.wh_id
             and wh_serv.serv_id = wh_serv_exitpnt.serv_id
         join serv_mst on serv_mst.serv_id = wh_serv.serv_id
         left outer join dscmst on dscmst.colnam = 'serv_id' and dscmst.colval = serv_mst.serv_id and dscmst.locale_id = @locale_id
    where 1=1
    and wh_serv_exitpnt.exitpnt_typ = @exitpnt_typ
    and wh_serv_exitpnt.exitpnt = @exitpnt
    and wh_serv.serv_enaflg = 1
    order by 1,2
    ]
    catch (-1403,510)
    |
    if ( @? = 0 )
    {
        publish data
        where serv_filnam = 'serv__' || ossi__html_val ( @serv_id, 1 ) || '.html'
        |
        {
            write output file 
            where mode = 'a'
            and data = @uc_typical_tr_data
                    ||     ossi__html_data ( @serv_id, 'td', @my_td_style, null, 1, null, null, @serv_filnam ) 
                    ||     ossi__html_data ( @uc_serv_id_descr, 'td', @my_td_style ) 
                    ||     '<td ' || @my_td_style || '>'
                    ||         '<ul>'
            ;
            [
            select distinct wh_id
            from wh_serv
            where serv_id = @serv_id
            and serv_enaflg = 1
            order by 1
            ]
            catch (-1403,510)
            |
            if ( @? = 0 )
            {
                write output file 
                where mode = 'a'
                and data = ossi__html_data ( @wh_id, 'li' )
            } /* list warehouses */
            ;
            write output file 
            where mode = 'a'
            and data = '</ul></td></tr>'
            ;
            generate ossi workflow documentation one workflow
            ;
            publish data
            where serv_id = @serv_id
            and uc_serv_id_descr = @uc_serv_id_descr
        } /* have serv_filnam */
    } /* all services */
}
finally
{
    write output file 
    where mode = 'a'
    and data =  '</table>' || @uc_typical_file_footer
}

]]>
</local-syntax>

<documentation>
<remarks>
<![CDATA[
<p>
This generates html documentation that lists services for an exit point
</p>
]]>
</remarks>

<retrows>1</retrows>

<retcol name="serv_id" type="COMTYP_CHAR"></retcol>
<retcol name="uc_serv_id_descr" type="COMTYP_CHAR"></retcol>


<example>
</example>

<exception value="eOK">The command completed successfully.</exception>

<seealso cref="generate ossi workflow documentation exit points"></seealso>
<seealso cref="generate ossi workflow documentation one exit point"></seealso>


</documentation>



</command>