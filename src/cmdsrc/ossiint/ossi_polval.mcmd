<command>
<name>ossi polval</name>
<description>Find a policy value as a function </description>
<type>Local Syntax</type>


<argument datatype="string" name="moca_farg1">Filter: Policy Code</argument>
<argument datatype="string" name="moca_farg2">Filter: Policy Variable</argument>
<argument datatype="string" name="moca_farg3">Filter: Policy Value</argument>
<argument datatype="string" name="moca_farg4">Optional Filter: rtstr1</argument>
<argument datatype="string" name="moca_farg5">Optional.  Return column.  Default rtstr1</argument>
<argument datatype="string" name="moca_farg6">Optional.  Warehouse id.  Default @wh_id or @@wh_id</argument>
<argument datatype="string" name="moca_farg7">Optional.  rtnum1 filter</argument>


<local-syntax>
<![CDATA[
/*
 * Change Log
 * Initial Check In
 * 20161002 saad.ahmad - 7026 - Bring the core Oracular components
 */
publish data
where polcod = @moca_farg1
and   polvar = @moca_farg2
and   polval = @moca_farg3
and   i_rtstr1 = @moca_farg4
and   retcol = nvl(@moca_farg5,'rtstr1')
and   wh_id  = nvl(nvl ( @moca_farg6, nvl(@wh_id, @@wh_id) ), '----')
and   i_rtnum1 = @moca_farg7
|
{
   if ( @i_rtstr1 is null )
      hide stack variable where name = 'i_rtstr1'
   |
   publish data
   where rtstr1 = null
   and   rtnum1 = null
   and   rtstr2 = null
   and   rtnum2 = null
   and   rtflt1 = null
   and   rtflt2 = null
   |
   if ( @i_rtnum1 is null )
      hide stack variable where name = 'i_rtnum1'
   |
   execute ossi moca and cache
   where uc_cache_grp = 'OSSI__POLVAL'
   and uc_moca_cmd = "list policies where @+polcod and @+polvar and @+polval and @+rtstr1^i_rtstr1 and @+rtnum1^i_rtnum1"
   and uc_inline = 1
   and uc_cache_key = @polcod || '__' || @polvar || '__' || @polval || '__' || @i_rtstr1 || '__' || @i_rtnum1 || '__' || @wh_id
   and uc_force_ossi_cache1 = '1'
   catch(-1403,510)
   |
   if (@? = 0 )
      execute server command
      where cmd = 'publish data where value=@' || @retcol
   else
      publish data where value = null
}
]]>
</local-syntax>

<documentation>
<remarks>
MOCA Function to get a policy value.  Also cache the results
</remarks>

<exception value="eOK">Normal successful completion</exception>

</documentation>



</command>