<command>
<name>process ossi ldap sync user wh</name>
<description>Process LDAP Sync for a user to wh</description>
<type>Local Syntax</type>

<argument datatype="string" name="uc_ossi_job_seq"></argument>
<argument datatype="string" name="uc_ossi_who"></argument>
<argument datatype="string" name="uc_res_les_usr_role"></argument>


<local-syntax>
<![CDATA[
/*
* Change Log
* Initial Check In
* Kent.Zhao - 10731
*/
publish data
where uc_row_count = rowcount(@uc_res_les_usr_role)
and uc_user_wh_prefix = @@UC_LDAP_SYNC_USER_WH_PREFIX
|
publish data
where uc_ossi_module_seq = ossi__register_module ( @uc_ossi_job_seq, 'USER_WH', 'rows='||@uc_row_count, @uc_ossi_who )
|
try
{
   if ( @uc_row_count > 0 and @uc_user_wh_prefix is not null )
   {
      /* Create user */
      publish data combination
      where res = @uc_res_les_usr_role
      |
      if ( @role_id is not null and @usr_id is not null and @role_id like @uc_user_wh_prefix || '%' )
      {
         publish data
         where rp_wh_id = substr(@role_id, len(@uc_user_wh_prefix)+1)
         |
         [
         select 1
         from wh
         where wh_id = @rp_wh_id
         ]
         catch (-1403,510)
         |
         if ( @? = 0 )
         {
            execute server command
            where cmd = "[select 1 from user_wh where usr_id = '"|| @usr_id || "' and wh_id = '" || @rp_wh_id || "']"
            and inline = 0
            catch (-1403,510)
            |
            if ( @? != 0 )
            {
               create user warehouse
               where usr_id = @usr_id
               and wh_id = @rp_wh_id
               and def_flg = 0
               catch(@?) /* dont want to error */
               |
               write daily transaction
               where actcod = 'UC_LSYNCUW'
               and movref = substr(@usr_id,1,20)
               and traknm = string(@uc_ossi_job_seq)
               and var_nam = 'wh_id'
               and fr_value = ''
               and to_value = @rp_wh_id
               and adj_ref1 = string(@?)
               and cmnt = 'User added to wh because it was so in LDAP. Status=' || @!
               and wh_id = '----'
            }
         } /* wh exists */
      } /* block */
      ;
      /*
       * Now go other way.  All wh for the user for wh that are ldap roles must still be valid.  Only do users
       * who are ldap iusers
       */
      {
         [
         select user_wh.usr_id  user_wh_usr_id,
                user_wh.wh_id   user_wh_wh_id
         from user_wh
              join les_usr_ath on les_usr_ath.usr_id = user_wh.usr_id
         where 1=1
         and les_usr_ath.uc_ldap_pk is not null
         and les_usr_ath.usr_sts = 'A'
         order by 1,2
         ]
         catch (-1403,510)
         |
         if ( @? = 0 )
         {
            {
               filter ossi rows with condition
               where res = @uc_res_les_usr_role
               and uc_condition = "@uc_user_wh_prefix||@user_wh_wh_id = @les_usr_role_role_id and @usr_id = @user_wh_usr_id"
            }
            >> res_filtered
            |
            /* If not found in ldap - disable it */
            if ( rowcount(@res_filtered) = 0)
            {
               if ( @user_wh_usr_id is not null and @user_wh_wh_id is not null )
               {
                  remove user warehouse
                  where usr_id = @user_wh_usr_id
                  and wh_id = @user_wh_wh_id
                  catch (@?)
                  |
                  write daily transaction
                  where actcod = 'UC_LSYNCUW'
                  and movref = substr(@user_wh_wh_id,1,20)
                  and traknm = string(@uc_ossi_job_seq)
                  and reacod = 'CHANGE'
                  and var_nam = 'wh_id'
                  and fr_value = @user_wh_wh_id
                  and to_value = ''
                  and adj_ref1 = string(@?)
                  and cmnt = 'User WH was not in LDAP results - removed from user.  Status=' || @!
                  and wh_id = '----'
               }
            } /* not in ldap query */
         } /* all active users in ldap in our db */
      } /* block for round 2 */
   } /* found rows in resultset */
   ;
   complete ossi job log
} /* module */
catch (@?)
{
   raise ossi job error
   where uc_ossi_err_code  = @?
   and   uc_ossi_err_descr = @!
   and   is_job_flg = '0'
}

]]>
</local-syntax>

<documentation>
<remarks>
This component syncs up rp les_usr_role to the result set passed in
</remarks>

<exception value="eOK">Normal successful completion</exception>

</documentation>


</command>
